#
# CSE183 Assignment 9 Backend
#

openapi: '3.0.3'

info:
  description: CSE183 Assignment 9 Backend
  version: 0.1.0
  title: CSE183 Assignment 9 Backend

servers:
  - url: http://localhost:3010/v0

paths:
  /mail:
    get:
      description: Returns all mail
      parameters:
      - name: mailbox
        in: query
        description: Mailbox type
        required: false
        schema:
          type: string
      - name: from
        in: query
        description: Search term
        required: false
        schema:
          type: string
      responses:
        200:
          description: EMail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EMailResponse'
        201:
          description: Email Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EMailResponse'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      description: Creates a new EMail
      requestBody:
        description: Application to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMail'
      responses:
        201:
          description: Application response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mailbox'
        400:
          description: Invalid ID
        409:
          description: Conflict. Requested ID in use.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /mail/{id}:
    get:
      description: Returns a single EMail
      parameters:
      - name: id
        in: path
        description: ID of the EMail
        required: true
        schema:
          type: string
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$'
      responses:
        200:
          description: EMail found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/Mailbox'
                  - $ref: '#/components/schemas/EMailResponse'
        400:
          description: Something is weird
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    put:
      description: Move a single EMail from one type to another
      parameters:
      - name: id
        in: query
        description: ID of the EMail
        required: true
        schema:
          type: string
      - name: mailbox
        in: query
        description: End Location of the EMail
        required: true
        schema:
          type: string
      responses:
        204:
          description: EMail moved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EMail'
        404:
          description: EMail not found
        409:
          description: EMail cannot be moved to sent
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      description: Deletes that email
      parameters:
      - name: id
        in: query
        description: ID of the EMail
        required: true
        schema:
          type: string
      responses:
        204:
          description: EMail Deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EMail'
  /user:
    get:
      description: Returns all mail
      responses:
        200:
          description: EMail Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListUsers'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      description: Creates a new EMail
      requestBody:
        description: Application to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInfo'
      responses:
        201:
          description: Application response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /user/{id}:
    get:
      description: Returns a single EMail
      parameters:
      - name: id
        in: path
        description: ID of the EMail
        required: true
        schema:
          type: string
      responses:
        200:
          description: User found
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/UserInfo'
                  - $ref: '#/components/schemas/ListUsers'
        400:
          description: Something is weird
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /mailbox:
    get:
      responses:
        200:
          description: EMail Types
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EMailTypes'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
    post:
      description: Creates a new EMail
      requestBody:
        description: Application to add
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mailboxes'
      responses:
        201:
          description: Application response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mailboxes'
        400:
          description: Invalid ID
        409:
          description: Conflict. Requested ID in use.
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    DummyResponse:
      required:
        - message
      properties:
        message:
          type: string

    EmailCount:
      required:
        - count
      properties:
        count:
          type: integer

    EMailResponse:
      type: array
      properties:
        emails: 
          type: array
          items:
            $ref: '#/components/schemas/EMail'

    EMailTypes:
      type: array
      properties:
        emails: 
          type: array
          items:
            $ref: '#/components/schemas/Mailboxes'

    Mailboxes:
      type: object
      properties:
        mailboxname:
          type: string
        mailboxcount:
          type: integer
      required:
        - mailboxname

    EMail:
      type: object
      properties:
        id:
          type: string
        to-name:
          type: string
        to-email:
          type: string
          pattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
        star:
          type: boolean
        readd:
          type: boolean
        subject:
          type: string
        recieved:
          type: string
        content:
          type: string
        from-name:
          type: string
        from-email:
          type: string
      required:
        - id
        - to-name 
        - to-email


    ListUsers:
      type: array
      properties:
        emails: 
          type: array
          items:
            $ref: '#/components/schemas/Mailboxes'

    UserInfo:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        avatar:
          type: string
        avatarbool:
          type: boolean
      required:
        - email

    Mailbox:
      type: object
      properties:
        id:
          type: string
        to-name:
          type: string
        to-email:
          type: string
          pattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
        subject:
          type: string
        recieved:
          type: string
        content:
          type: string
        from-name:
          type: string
        from-email:
          type: string
        star:
          type: boolean
        readd:
          type: boolean

    SendMail:
      type: object
      properties:
        to-name:
          type: string
        to-email:
          type: string
          pattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
        from-name:
          type: string
        from-email:
          type: string
          pattern: '^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$'
        subject:
          type: string
        content:
          type: string
          